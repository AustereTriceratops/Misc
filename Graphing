def axes():    
    strokeWeight(3)
    stroke(90)
    line(0,-height,0,height)
    line(-width/2,0,width,0)  #the main axes
    
    
    s=80
    strokeWeight(1)
    stroke(90,90,90,100)
    while s<width:
        line(s,-height,s,height)
        line(-s,-height,-s,height)
        line(-width/2,s,width,s)
        line(-width/2,-s,width,-s)      #smaller grid lines
        s+=80

# just a block that sets everything up
t=0.0
xscl = 35.0
yscl = 30.0
x = range(-20,20,1)
domain = len(x)
y = [0]*domain
y2 = [0]*domain
yp = [0]*domain



def func(x): #maps x values to y values
    i=0
    while i<domain-1:
        y[i] = 5*exp(-0.07*x[i]**2)
        yp[i] = y[i] 
        i+=1
        
def func2(x):
    i=0
    while i<domain-1:
        y2[i] = 0.2*x[i]**2 + 0.7*x[i]
        i+=1
        
def graph():
    j=0
    noFill()
    stroke(180,30,50)
    strokeWeight(3)
    beginShape()
    while j<domain-1:
        curveVertex(xscl*x[j],-yscl*yp[j])
        j+=1
    endShape()

    
def transition(): #time-dependent bezier curve interpolation between two functions
    s = t/70.0
    if t<=70:
        for i in range(0,domain,1):
            yp[i] = y[i] + 2*(y[i] - y2[i])*(s**2)*(s-1.5)
   
   
def setup():
    size(1300,800)
    #noLoop()
    func(x)
    func2(x)
    
    xaxis = width/(2*xscl)
    yaxis = height/(2*yscl)
    
    
def draw():
    global t
    
    translate(width/2, 200+height/2)
    background(255)
    
    axes()
    graph()
    transition()
    #saveFrame('graph-###.png')
    
    t+=1
