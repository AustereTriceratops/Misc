'''
A program in Processing.py which generates a Poincare map for the duffing equation. 
The finished result looks like this: https://imgur.com/bbv3AMt.gif
'''


phasex = [0]
phasev = [0] #holds phase space coordinates


f = 0
s = 0
w=0

xscl = 600.0
yscl = 90.0

x = [0]
xc = 1.0
xc_v = -2.0
        
def graph(): 
    domain = len(phasex)
    j=0
    fill(10,200)
    stroke(10,200)
    strokeWeight(1)
    while j<domain:
        ellipse(xscl*phasex[j],-yscl*phasev[j],1,1)
        j+=1

   
   
def setup():
    size(1300,800)
    
    
def draw():
    global f, w, s, xc, xc_v, phasex, phasev
    
    s = f/36.0
    t = s*PI
    
    xc_a = 8*cos(0.5*t) - 0.02*xc_v - xc -5*xc**3   #equations of motion
    xc_v += (PI/36.0)*xc_a
    xc += (PI/36.0)*xc_v
    
    if f % 144 == 0:            #takes phase space coordinates whenever t = 4*pi
        phasex[w] = xc
        phasev[w] = xc_v
        phasex.append(0)
        phasev.append(0)
        w+=1

    
    translate(width/2 - 800, height/2)
    background(255)

    graph()
    #saveFrame('graph-###.png')
    
    f+=1
