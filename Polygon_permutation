n=9
frames = 4

t= [0]*frames
s = [0]*frames
p=0
x=0
r = [10*n]*n
rp = [10*n]*n
x = [0]*n
y = [0]*n
angles = [0]*n
anglesp = [0]*n
#side = 2*r*sin(PI/n)

for i in range(0,n,1):
    angles[i] = 0 + i*2*PI/n
    anglesp[i] = 0 + i*2*PI/n


def setup():
    size(1300,800)
    smooth(8)

  
def permute(a,b):
    global s
    s[p] = t[p]/40.0
    anglesp[a] = angles[a] + 2*(angles[a] - angles[b])*(s[p]**2)*(s[p]-1.5)
    anglesp[b] = angles[b] + 2*(angles[b] - angles[a])*(s[p]**2)*(s[p]-1.5)
    rp[a] = r[a]*(1.0 - 1.3*s[p]*(s[p]-1))
    rp[b] = r[b]*(1.0 - 1.3*s[p]*(s[p]-1))

def switch(a,b):
    anglesp[a], anglesp[b] = anglesp[b], anglesp[a]
    angles[a], angles[b] = angles[b], angles[a]
           
def draw():
    global t, p, rp, x, angles

    
    for i in range(0,n,1):
        x[i] = rp[i]*cos(anglesp[i])
        y[i] = rp[i]*sin(anglesp[i])
    
    
    '''if t[0]<40:
        permute(5,1)
        t[0] +=1
    elif t[0]==40:
        p+=1
        t[0] +=1
    elif t[0]>40:
        if t[1]<40:
            permute(0,3)
            t[1]+=1'''
            
    for j in range(0,frames,1):
        if t[j]<40:
            if p==0:
                permute(5,1)
            elif p==1:
                permute(1,5)
                if t[j]<1:
                    switch(1,5)
            elif p==2:
                permute(3,1)
                if t[j]==0:
                    switch(1,5)
            elif p==3:
                permute(7,6)
            t[j] +=1
            break
        elif t[j]==40:
            p+=1
            t[j] +=1
            break
    
    #saveFrame("failure-####.png")
    background(255)
    translate(width/2, height/2)
    strokeWeight(4)
    for i in range(0,n,1):
        fill((i+1)*255/n)
        ellipse(x[i],y[i],50,50)
    noFill()
