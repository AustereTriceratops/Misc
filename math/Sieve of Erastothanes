'''
A more optimized version of code I wrote a month ago.
This uses the sieve of Erastothanes to find prime numbers below 60 million
'''

import time
import csv

t0 = time.time() #these are just for measuring efficiency

max = 60000000
multiples = [0]*max
integers = range(0,max,1)
p = []

q=2                                   #the sieve itself, which finds all multiples
while q<max/2:
    s=2
    while q*s <= max:
        multiples[q*s - 1] = 1
        s+=1
    q+=1
    while multiples[q-1] == 1:   
        q+=1

for i in integers:                 #takes the complement of the multiples to yield primes
    if multiples[i-1] == 0 and i > 1: 
        p.append(i)

t1 = time.time()

with open("primesTxt.csv", "w") as y:            #writes primes into a .csv file, this block can be deleted 
    writer = csv.writer(y, delimiter=',')
    n=0
    for i in p:
        writer.writerow([i,n])
        n+=1

print(t1-t0)
